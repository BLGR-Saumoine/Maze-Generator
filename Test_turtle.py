# -*- coding: utf-8 -*-

from turtle import *

def turtle_truc(n,G):
    speed(10) 
    
    etape = 0
    
    while True:
        while etape == 0 :
            forward(20*n)
            right(90)
        
        
            if abs(pos()) < 1 :
                etape +=1
                
# =============================================================================
#         while etape == 1 :
# =============================================================================
                        
        break
    done()
            
            
            
            
    
    
# =============================================================================
#         
#             for i in range (n):
#                 setx(0)
#                 sety(0)
#                 setheading(0)
#                 forward(20*i)
#                 right(90)
#                 forward(20*n)
#             for j in range (n) :
#                 setx(0)
#                 sety(0)
#                 setheading(270)
#                 forward(20*j)
#                 left(90)
#                 forward(20*n)
#             etape += 1
# =============================================================================

G ={(0, 0): [(0, 1), (1, 0)], (0, 1): [(0, 0), (1, 1), (0, 2)], (0, 2): [(0, 3), (1, 2), (0, 1)], (0, 3): [(0, 2), (1, 3), (1, 3)], (1, 0): [(0, 0), (1, 1)], (1, 1): [(0, 1), (2, 1), (1, 2), (1, 0)], (1, 2): [(0, 2), (2, 2), (1, 3), (1, 1), (1, 1)], (1, 3): [(0, 3), (1, 2), (2, 3), (1, 2)], (2, 0): [(3, 0), (3, 0), (2, 1)], (2, 1): [(1, 1), (2, 0), (2, 2), (2, 0)], (2, 2): [(3, 2), (1, 2), (2, 1), (2, 3)], (2, 3): [(1, 3), (2, 2), (3, 3)], (3, 0): [(3, 1), (2, 0), (3, 1)], (3, 1): [(3, 0), (3, 2), (3, 0)], (3, 2): [(3, 3), (2, 2), (3, 1), (2, 2), (2, 2)], (3, 3): [(3, 2), (2, 3)]}               
            
print(turtle_truc(10,G))    
    
    
   
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    



















